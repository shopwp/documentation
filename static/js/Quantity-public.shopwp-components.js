"use strict";
(self["webpackChunkshopwpComponents"] = self["webpackChunkshopwpComponents"] || []).push([["Quantity-public"],{

/***/ "./src/common/icons/icon-decrement.jsx":
/*!*********************************************!*\
  !*** ./src/common/icons/icon-decrement.jsx ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/react */ "./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
/* harmony import */ var Common_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! Common/css */ "./src/common/css/index.jsx");
/** @jsx jsx */




function QuantityDecIcon() {
  var QuantityDecIconCSS = /*#__PURE__*/(0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.css)("position:relative;content:\"\";display:block;height:1px;background:black;width:12px;position:absolute;top:calc(50% - 1px);left:calc(50% - 6px);", (0,Common_css__WEBPACK_IMPORTED_MODULE_0__.mq)("small"), "{width:20px;left:calc(50% - 10px);};label:QuantityDecIconCSS;" + ( false ? 0 : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZXcvX3d3dy9zaG9wd3AvaHRkb2NzL3dwLWNvbnRlbnQvcGx1Z2lucy9zaG9wd3AtcHJvL25wbS1wYWNrYWdlcy9zaG9wd3AtY29tcG9uZW50cy9zcmMvY29tbW9uL2ljb25zL2ljb24tZGVjcmVtZW50LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLZ0MiLCJmaWxlIjoiL1VzZXJzL2FuZHJldy9fd3d3L3Nob3B3cC9odGRvY3Mvd3AtY29udGVudC9wbHVnaW5zL3Nob3B3cC1wcm8vbnBtLXBhY2thZ2VzL3Nob3B3cC1jb21wb25lbnRzL3NyYy9jb21tb24vaWNvbnMvaWNvbi1kZWNyZW1lbnQuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyBqc3gsIGNzcyB9IGZyb20gXCJAZW1vdGlvbi9yZWFjdFwiXG5pbXBvcnQgeyBtcSB9IGZyb20gXCJDb21tb24vY3NzXCJcblxuZnVuY3Rpb24gUXVhbnRpdHlEZWNJY29uKCkge1xuICBjb25zdCBRdWFudGl0eURlY0ljb25DU1MgPSBjc3NgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiAxcHg7XG4gICAgYmFja2dyb3VuZDogYmxhY2s7XG4gICAgd2lkdGg6IDEycHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogY2FsYyg1MCUgLSAxcHgpO1xuICAgIGxlZnQ6IGNhbGMoNTAlIC0gNnB4KTtcblxuICAgICR7bXEoXCJzbWFsbFwiKX0ge1xuICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICBsZWZ0OiBjYWxjKDUwJSAtIDEwcHgpO1xuICAgIH1cbiAgYFxuXG4gIHJldHVybiAoXG4gICAgPHNwYW5cbiAgICAgIGNzcz17UXVhbnRpdHlEZWNJY29uQ1NTfVxuICAgICAgY2xhc3NOYW1lPVwid3BzLXF1YW50aXR5LWljb24gd3BzLXF1YW50aXR5LWRlY3JlbWVudC1pY29uXCJcbiAgICAvPlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IFF1YW50aXR5RGVjSWNvblxuIl19 */"));
  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)("span", {
    css: QuantityDecIconCSS,
    className: "wps-quantity-icon wps-quantity-decrement-icon"
  });
}

/* harmony default export */ __webpack_exports__["default"] = (QuantityDecIcon);

/***/ }),

/***/ "./src/common/icons/icon-increment.jsx":
/*!*********************************************!*\
  !*** ./src/common/icons/icon-increment.jsx ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/react */ "./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
/* harmony import */ var Common_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! Common/css */ "./src/common/css/index.jsx");
/** @jsx jsx */




function QuantityIncIcon() {
  var QuantityIncIconCSS = /*#__PURE__*/(0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.css)("position:relative;display:block;height:1px;background:black;width:10px;position:absolute;top:calc(50% - 1px);left:calc(50% - 5px);", (0,Common_css__WEBPACK_IMPORTED_MODULE_0__.mq)("small"), "{width:20px;left:calc(50% - 10px);}&:after{content:\"\";display:block;height:1px;transform:rotate(90deg);background:black;width:10px;position:absolute;top:calc(50% - 0);left:calc(50% - 5px);", (0,Common_css__WEBPACK_IMPORTED_MODULE_0__.mq)("small"), "{width:20px;left:calc(50% - 10px);}};label:QuantityIncIconCSS;" + ( false ? 0 : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZXcvX3d3dy9zaG9wd3AvaHRkb2NzL3dwLWNvbnRlbnQvcGx1Z2lucy9zaG9wd3AtcHJvL25wbS1wYWNrYWdlcy9zaG9wd3AtY29tcG9uZW50cy9zcmMvY29tbW9uL2ljb25zL2ljb24taW5jcmVtZW50LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLZ0MiLCJmaWxlIjoiL1VzZXJzL2FuZHJldy9fd3d3L3Nob3B3cC9odGRvY3Mvd3AtY29udGVudC9wbHVnaW5zL3Nob3B3cC1wcm8vbnBtLXBhY2thZ2VzL3Nob3B3cC1jb21wb25lbnRzL3NyYy9jb21tb24vaWNvbnMvaWNvbi1pbmNyZW1lbnQuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyBqc3gsIGNzcyB9IGZyb20gXCJAZW1vdGlvbi9yZWFjdFwiXG5pbXBvcnQgeyBtcSB9IGZyb20gXCJDb21tb24vY3NzXCJcblxuZnVuY3Rpb24gUXVhbnRpdHlJbmNJY29uKCkge1xuICBjb25zdCBRdWFudGl0eUluY0ljb25DU1MgPSBjc3NgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogMXB4O1xuICAgIGJhY2tncm91bmQ6IGJsYWNrO1xuICAgIHdpZHRoOiAxMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IGNhbGMoNTAlIC0gMXB4KTtcbiAgICBsZWZ0OiBjYWxjKDUwJSAtIDVweCk7XG5cbiAgICAke21xKFwic21hbGxcIil9IHtcbiAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgbGVmdDogY2FsYyg1MCUgLSAxMHB4KTtcbiAgICB9XG5cbiAgICAmOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGhlaWdodDogMXB4O1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgYmFja2dyb3VuZDogYmxhY2s7XG4gICAgICB3aWR0aDogMTBweDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogY2FsYyg1MCUgLSAwKTtcbiAgICAgIGxlZnQ6IGNhbGMoNTAlIC0gNXB4KTtcblxuICAgICAgJHttcShcInNtYWxsXCIpfSB7XG4gICAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgICBsZWZ0OiBjYWxjKDUwJSAtIDEwcHgpO1xuICAgICAgfVxuICAgIH1cbiAgYFxuXG4gIHJldHVybiAoXG4gICAgPHNwYW5cbiAgICAgIGNzcz17UXVhbnRpdHlJbmNJY29uQ1NTfVxuICAgICAgY2xhc3NOYW1lPVwid3BzLXF1YW50aXR5LWljb24gd3BzLXF1YW50aXR5LWluY3JlbWVudC1pY29uXCJcbiAgICAvPlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IFF1YW50aXR5SW5jSWNvblxuIl19 */"));
  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)("span", {
    css: QuantityIncIconCSS,
    className: "wps-quantity-icon wps-quantity-increment-icon"
  });
}

/* harmony default export */ __webpack_exports__["default"] = (QuantityIncIcon);

/***/ }),

/***/ "./src/components/quantity/index.jsx":
/*!*******************************************!*\
  !*** ./src/components/quantity/index.jsx ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/esm/slicedToArray.js");
/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @emotion/react */ "./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
/* harmony import */ var Common_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! Common/css */ "./src/common/css/index.jsx");
/* harmony import */ var _common_icons_icon_decrement__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/icons/icon-decrement */ "./src/common/icons/icon-decrement.jsx");
/* harmony import */ var _common_icons_icon_increment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/icons/icon-increment */ "./src/common/icons/icon-increment.jsx");
/* harmony import */ var use_debounce__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! use-debounce */ "./node_modules/use-debounce/esm/useDebounce.js");
/* harmony import */ var Hooks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! Hooks */ "./src/hooks/index.js");
/* provided dependency */ var __webpack_provided_wp_dot_element = __webpack_require__(/*! react */ "react");
/* provided dependency */ var __webpack_provided_wp_dot_i18n = __webpack_require__(/*! @wordpress/i18n */ "./node_modules/@wordpress/i18n/build-module/index.js");


function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

/** @jsx jsx */








var _ref =  false ? 0 : {
  name: "erezdp-QuantityIncCSS",
  styles: "border-radius:0 5px 5px 0;&:hover{cursor:pointer;background-color:#f1f1f1;};label:QuantityIncCSS;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

function Quantity(_ref2) {
  var initialQuantity = _ref2.initialQuantity,
      maxQuantity = _ref2.maxQuantity,
      minQuantity = _ref2.minQuantity,
      quantityStep = _ref2.quantityStep,
      dispatch = _ref2.dispatch,
      onChange = _ref2.onChange,
      _ref2$small = _ref2.small,
      small = _ref2$small === void 0 ? true : _ref2$small,
      _ref2$isUpdating = _ref2.isUpdating,
      isUpdating = _ref2$isUpdating === void 0 ? false : _ref2$isUpdating,
      _ref2$lineItem = _ref2.lineItem,
      lineItem = _ref2$lineItem === void 0 ? false : _ref2$lineItem,
      _ref2$setNotice = _ref2.setNotice,
      setNotice = _ref2$setNotice === void 0 ? false : _ref2$setNotice;
  var _wp$element = wp.element,
      useState = __webpack_provided_wp_dot_element.useState,
      useEffect = __webpack_provided_wp_dot_element.useEffect;

  var _useState = useState(initialQuantity),
      _useState2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_useState, 2),
      quantity = _useState2[0],
      setQuantity = _useState2[1];

  var _useDebounce = (0,use_debounce__WEBPACK_IMPORTED_MODULE_5__["default"])(parseInt(quantity), 20),
      _useDebounce2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_useDebounce, 1),
      debouncedQuantity = _useDebounce2[0];

  var isFirstRender = (0,Hooks__WEBPACK_IMPORTED_MODULE_4__.useFirstRender)();
  useEffect(function () {
    maybeShowInventoryNotice(initialQuantity);
    setQuantity(initialQuantity);
  }, [initialQuantity]);
  var quantityInputCSS = /*#__PURE__*/(0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.css)("&&{margin:0;width:", small ? "40px" : "45px", ";height:", small ? "40px" : "45px", ";border:none;text-align:center;font-size:18px;margin-right:0px;border-top:1px solid #a5a5a5;border-bottom:1px solid #a5a5a5;max-height:", small ? "40px" : "45px", ";border-radius:0;appearance:none;padding:0;color:#121212;background:white;::-webkit-outer-spin-button,::-webkit-inner-spin-button{-webkit-appearance:none;margin:0;}&[type=\"number\"]{-moz-appearance:textfield;}&:hover{cursor:", isUpdating ? "not-allowed" : "text", ";}", (0,Common_css__WEBPACK_IMPORTED_MODULE_1__.mq)("small"), "{width:60px;height:60px;max-height:60px;font-size:24px;}};label:quantityInputCSS;" + ( false ? 0 : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
  var QuantityIncDecCSS = /*#__PURE__*/(0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.css)("color:#333;display:block;margin-top:0;position:relative;padding:0 10px;font-size:17px;font-family:monospace;background:transparent;box-shadow:none;cursor:pointer;text-align:center;border:1px solid #a5a5a5;width:", small ? "45px" : "50px", ";height:", small ? "40px" : "45px", ";outline:none;outline-offset:0;transition:all 0.2s ease;&:hover{background:#f1f1f1;}", (0,Common_css__WEBPACK_IMPORTED_MODULE_1__.mq)("small"), "{font-size:26px;width:60px;height:60px;};label:QuantityIncDecCSS;" + ( false ? 0 : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
  var QuantityIncCSS = _ref;
  var QuantityDecCSS = /*#__PURE__*/(0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.css)("border-radius:5px 0 0 5px;&:hover{cursor:", minQuantity && quantity <= minQuantity || isUpdating || quantity === 1 ? "not-allowed" : "pointer", ";background-color:", minQuantity && quantity <= minQuantity || isUpdating || quantity === 1 ? "white" : "#f1f1f1", ";};label:QuantityDecCSS;" + ( false ? 0 : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
  var quantityContainer = /*#__PURE__*/(0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.css)("width:122px;margin:0;background:white;", (0,Common_css__WEBPACK_IMPORTED_MODULE_1__.mq)("small"), "{width:100%;min-width:160px;};label:quantityContainer;" + ( false ? 0 : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZXcvX3d3dy9zaG9wd3AvaHRkb2NzL3dwLWNvbnRlbnQvcGx1Z2lucy9zaG9wd3AtcHJvL25wbS1wYWNrYWdlcy9zaG9wd3AtY29tcG9uZW50cy9zcmMvY29tcG9uZW50cy9xdWFudGl0eS9pbmRleC5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUkrQiIsImZpbGUiOiIvVXNlcnMvYW5kcmV3L193d3cvc2hvcHdwL2h0ZG9jcy93cC1jb250ZW50L3BsdWdpbnMvc2hvcHdwLXByby9ucG0tcGFja2FnZXMvc2hvcHdwLWNvbXBvbmVudHMvc3JjL2NvbXBvbmVudHMvcXVhbnRpdHkvaW5kZXguanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyBqc3gsIGNzcyB9IGZyb20gXCJAZW1vdGlvbi9yZWFjdFwiXG5pbXBvcnQgeyBjb250YWluZXJGbHVpZENTUywgZmxleFJvd0NTUywgbXEgfSBmcm9tIFwiQ29tbW9uL2Nzc1wiXG5pbXBvcnQgUXVhbnRpdHlEZWNJY29uIGZyb20gXCIuLi8uLi9jb21tb24vaWNvbnMvaWNvbi1kZWNyZW1lbnRcIlxuaW1wb3J0IFF1YW50aXR5SW5jSWNvbiBmcm9tIFwiLi4vLi4vY29tbW9uL2ljb25zL2ljb24taW5jcmVtZW50XCJcbmltcG9ydCB7IHVzZURlYm91bmNlIH0gZnJvbSBcInVzZS1kZWJvdW5jZVwiXG5pbXBvcnQgeyB1c2VGaXJzdFJlbmRlciB9IGZyb20gXCJIb29rc1wiXG5cbmZ1bmN0aW9uIFF1YW50aXR5KHtcbiAgaW5pdGlhbFF1YW50aXR5LFxuICBtYXhRdWFudGl0eSxcbiAgbWluUXVhbnRpdHksXG4gIHF1YW50aXR5U3RlcCxcbiAgZGlzcGF0Y2gsXG4gIG9uQ2hhbmdlLFxuICBzbWFsbCA9IHRydWUsXG4gIGlzVXBkYXRpbmcgPSBmYWxzZSxcbiAgbGluZUl0ZW0gPSBmYWxzZSxcbiAgc2V0Tm90aWNlID0gZmFsc2UsXG59KSB7XG4gIGNvbnN0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9ID0gd3AuZWxlbWVudFxuICBjb25zdCBbcXVhbnRpdHksIHNldFF1YW50aXR5XSA9IHVzZVN0YXRlKGluaXRpYWxRdWFudGl0eSlcbiAgY29uc3QgW2RlYm91bmNlZFF1YW50aXR5XSA9IHVzZURlYm91bmNlKHBhcnNlSW50KHF1YW50aXR5KSwgMjApXG4gIGNvbnN0IGlzRmlyc3RSZW5kZXIgPSB1c2VGaXJzdFJlbmRlcigpXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBtYXliZVNob3dJbnZlbnRvcnlOb3RpY2UoaW5pdGlhbFF1YW50aXR5KVxuICAgIHNldFF1YW50aXR5KGluaXRpYWxRdWFudGl0eSlcbiAgfSwgW2luaXRpYWxRdWFudGl0eV0pXG5cbiAgY29uc3QgcXVhbnRpdHlJbnB1dENTUyA9IGNzc2BcbiAgICAmJiB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICB3aWR0aDogJHtzbWFsbCA/IFwiNDBweFwiIDogXCI0NXB4XCJ9O1xuICAgICAgaGVpZ2h0OiAke3NtYWxsID8gXCI0MHB4XCIgOiBcIjQ1cHhcIn07XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDBweDtcbiAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjYTVhNWE1O1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNhNWE1YTU7XG4gICAgICBtYXgtaGVpZ2h0OiAke3NtYWxsID8gXCI0MHB4XCIgOiBcIjQ1cHhcIn07XG4gICAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgICAgYXBwZWFyYW5jZTogbm9uZTtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgICBjb2xvcjogIzEyMTIxMjtcbiAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgICA6Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24sXG4gICAgICA6Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24ge1xuICAgICAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgIH1cblxuICAgICAgLyogRmlyZWZveCAqL1xuICAgICAgJlt0eXBlPVwibnVtYmVyXCJdIHtcbiAgICAgICAgLW1vei1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gICAgICB9XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICBjdXJzb3I6ICR7aXNVcGRhdGluZyA/IFwibm90LWFsbG93ZWRcIiA6IFwidGV4dFwifTtcbiAgICAgIH1cblxuICAgICAgJHttcShcInNtYWxsXCIpfSB7XG4gICAgICAgIHdpZHRoOiA2MHB4O1xuICAgICAgICBoZWlnaHQ6IDYwcHg7XG4gICAgICAgIG1heC1oZWlnaHQ6IDYwcHg7XG4gICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgIH1cbiAgICB9XG4gIGBcblxuICBjb25zdCBRdWFudGl0eUluY0RlY0NTUyA9IGNzc2BcbiAgICBjb2xvcjogIzMzMztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiAwIDEwcHg7XG4gICAgZm9udC1zaXplOiAxN3B4O1xuICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2U7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNhNWE1YTU7XG4gICAgd2lkdGg6ICR7c21hbGwgPyBcIjQ1cHhcIiA6IFwiNTBweFwifTtcbiAgICBoZWlnaHQ6ICR7c21hbGwgPyBcIjQwcHhcIiA6IFwiNDVweFwifTtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIG91dGxpbmUtb2Zmc2V0OiAwO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICNmMWYxZjE7XG4gICAgfVxuXG4gICAgJHttcShcInNtYWxsXCIpfSB7XG4gICAgICBmb250LXNpemU6IDI2cHg7XG4gICAgICB3aWR0aDogNjBweDtcbiAgICAgIGhlaWdodDogNjBweDtcbiAgICB9XG4gIGBcblxuICBjb25zdCBRdWFudGl0eUluY0NTUyA9IGNzc2BcbiAgICBib3JkZXItcmFkaXVzOiAwIDVweCA1cHggMDtcblxuICAgICY6aG92ZXIge1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcbiAgICB9XG4gIGBcblxuICBjb25zdCBRdWFudGl0eURlY0NTUyA9IGNzc2BcbiAgICBib3JkZXItcmFkaXVzOiA1cHggMCAwIDVweDtcblxuICAgICY6aG92ZXIge1xuICAgICAgY3Vyc29yOiAkeyhtaW5RdWFudGl0eSAmJiBxdWFudGl0eSA8PSBtaW5RdWFudGl0eSkgfHxcbiAgICAgIGlzVXBkYXRpbmcgfHxcbiAgICAgIHF1YW50aXR5ID09PSAxXG4gICAgICAgID8gXCJub3QtYWxsb3dlZFwiXG4gICAgICAgIDogXCJwb2ludGVyXCJ9O1xuXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhtaW5RdWFudGl0eSAmJiBxdWFudGl0eSA8PSBtaW5RdWFudGl0eSkgfHxcbiAgICAgIGlzVXBkYXRpbmcgfHxcbiAgICAgIHF1YW50aXR5ID09PSAxXG4gICAgICAgID8gXCJ3aGl0ZVwiXG4gICAgICAgIDogXCIjZjFmMWYxXCJ9O1xuICAgIH1cbiAgYFxuXG4gIGNvbnN0IHF1YW50aXR5Q29udGFpbmVyID0gY3NzYFxuICAgIHdpZHRoOiAxMjJweDtcbiAgICBtYXJnaW46IDA7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG5cbiAgICAke21xKFwic21hbGxcIil9IHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWluLXdpZHRoOiAxNjBweDtcbiAgICB9XG4gIGBcblxuICBmdW5jdGlvbiBoYW5kbGVRdWFudGl0eUNoYW5nZShlKSB7XG4gICAgaWYgKGlzVXBkYXRpbmcpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGlmIChlLnRhcmdldC52YWx1ZSB8fCBlLnRhcmdldC52YWx1ZSA9PT0gMCkge1xuICAgICAgaWYgKG1pblF1YW50aXR5ICYmIGUudGFyZ2V0LnZhbHVlIDw9IG1pblF1YW50aXR5KSB7XG4gICAgICAgIHZhciBuZXdRdWFudGl0eSA9IG1pblF1YW50aXR5XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgbmV3UXVhbnRpdHkgPSBlLnRhcmdldC52YWx1ZVxuICAgICAgfVxuXG4gICAgICBtYXliZVNob3dJbnZlbnRvcnlOb3RpY2UoZS50YXJnZXQudmFsdWUpXG4gICAgICBzZXRRdWFudGl0eShuZXdRdWFudGl0eSlcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVEZWNyZW1lbnQoKSB7XG4gICAgaWYgKGlzVXBkYXRpbmcpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGRpc3BhdGNoKHtcbiAgICAgIHR5cGU6IFwiU0VUX05PVElDRVwiLFxuICAgICAgcGF5bG9hZDogZmFsc2UsXG4gICAgfSlcblxuICAgIG1heWJlU2hvd0ludmVudG9yeU5vdGljZShxdWFudGl0eSlcblxuICAgIGlmIChxdWFudGl0eSA9PT0gMSB8fCBxdWFudGl0eSA8IG1pblF1YW50aXR5KSB7XG4gICAgICBkaXNwYXRjaCh7XG4gICAgICAgIHR5cGU6IFwiU0VUX05PVElDRVwiLFxuICAgICAgICBwYXlsb2FkOiB7XG4gICAgICAgICAgdHlwZTogXCJ3YXJuaW5nXCIsXG4gICAgICAgICAgbWVzc2FnZTogd3AuaTE4bi5zcHJpbnRmKFxuICAgICAgICAgICAgd3AuaTE4bi5fXyhcbiAgICAgICAgICAgICAgXCJTb3JyeSwgeW91IG11c3QgcHVyY2hhc2UgYSBtaW5pbXVtIG9mICVkIGl0ZW1zIGZvciB0aGlzIHByb2R1Y3QuXCIsXG4gICAgICAgICAgICAgIFwic2hvcHdwXCJcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICBxdWFudGl0eVxuICAgICAgICAgICksXG4gICAgICAgIH0sXG4gICAgICB9KVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoIXF1YW50aXR5U3RlcCkge1xuICAgICAgICB2YXIgbmV3UXVhbnRpdHkgPSBxdWFudGl0eSAtIDFcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBuZXdRdWFudGl0eSA9IHF1YW50aXR5IC0gcXVhbnRpdHlTdGVwXG4gICAgICB9XG5cbiAgICAgIG1heWJlU2hvd0ludmVudG9yeU5vdGljZShuZXdRdWFudGl0eSlcbiAgICAgIHNldFF1YW50aXR5KG5ld1F1YW50aXR5KVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUluY3JlbWVudCgpIHtcbiAgICBpZiAoaXNVcGRhdGluZykge1xuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIGRpc3BhdGNoKHtcbiAgICAgIHR5cGU6IFwiU0VUX05PVElDRVwiLFxuICAgICAgcGF5bG9hZDogZmFsc2UsXG4gICAgfSlcblxuICAgIGlmICghcXVhbnRpdHlTdGVwKSB7XG4gICAgICB2YXIgbmV3UXVhbnRpdHkgPSBxdWFudGl0eSArIDFcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIG5ld1F1YW50aXR5ID0gcXVhbnRpdHkgKyBxdWFudGl0eVN0ZXBcbiAgICB9XG5cbiAgICBtYXliZVNob3dJbnZlbnRvcnlOb3RpY2UobmV3UXVhbnRpdHkpXG4gICAgc2V0UXVhbnRpdHkobmV3UXVhbnRpdHkpXG4gIH1cblxuICBmdW5jdGlvbiBtYXliZVNob3dJbnZlbnRvcnlOb3RpY2UobmV3UXVhbnRpdHkpIHtcbiAgICBpZiAobWF4UXVhbnRpdHkgJiYgbmV3UXVhbnRpdHkgPiBtYXhRdWFudGl0eSkge1xuICAgICAgLy8gT25seSBzaG93IG5vdGljZSBmb3IgY2FydCBsaW5lIGl0ZW0gcXVhbnRpdHlcbiAgICAgIGlmIChzZXROb3RpY2UgJiYgbGluZUl0ZW0pIHtcbiAgICAgICAgc2V0Tm90aWNlKHtcbiAgICAgICAgICB0eXBlOiBcIndhcm5pbmdcIixcbiAgICAgICAgICBtZXNzYWdlOiB3cC5pMThuLnNwcmludGYoXG4gICAgICAgICAgICB3cC5pMThuLl9fKFxuICAgICAgICAgICAgICBcIldhcm5pbmc6IHRoZSBxdWFudGl0eSB5b3UncmUgdHJ5aW5nIHRvIHB1cmNoYXNlIG1heSBiZSBsaW1pdGVkIHRvICVkIGF0IGNoZWNrb3V0LlwiLFxuICAgICAgICAgICAgICBcInNob3B3cFwiXG4gICAgICAgICAgICApLFxuICAgICAgICAgICAgbGluZUl0ZW0ubWVyY2hhbmRpc2UucXVhbnRpdHlBdmFpbGFibGVcbiAgICAgICAgICApLFxuICAgICAgICB9KVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoc2V0Tm90aWNlICYmIGxpbmVJdGVtKSB7XG4gICAgICAgIHNldE5vdGljZShmYWxzZSlcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChpc0ZpcnN0UmVuZGVyKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBvbkNoYW5nZShkZWJvdW5jZWRRdWFudGl0eSwgaW5pdGlhbFF1YW50aXR5KVxuICB9LCBbZGVib3VuY2VkUXVhbnRpdHldKVxuXG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY2xhc3NOYW1lPVwid3BzLXF1YW50aXR5LWNvbnRhaW5lclwiXG4gICAgICBjc3M9e1tjb250YWluZXJGbHVpZENTUywgcXVhbnRpdHlDb250YWluZXJdfVxuICAgID5cbiAgICAgIDxkaXYgY3NzPXtbZmxleFJvd0NTU119PlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgY2xhc3NOYW1lPVwid3BzLXF1YW50aXR5LWRlY3JlbWVudFwiXG4gICAgICAgICAgY3NzPXtbUXVhbnRpdHlJbmNEZWNDU1MsIFF1YW50aXR5RGVjQ1NTXX1cbiAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICByb2xlPVwiYnV0dG9uXCJcbiAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVEZWNyZW1lbnR9XG4gICAgICAgID5cbiAgICAgICAgICA8UXVhbnRpdHlEZWNJY29uIC8+XG4gICAgICAgIDwvYnV0dG9uPlxuXG4gICAgICAgIDxpbnB1dFxuICAgICAgICAgIGNsYXNzTmFtZT1cIndwcy1xdWFudGl0eS1pbnB1dFwiXG4gICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgbWluPXttaW5RdWFudGl0eSA+IDEgPyBtaW5RdWFudGl0eSA6IDF9XG4gICAgICAgICAgb25Gb2N1cz17KGUpID0+IGUuY3VycmVudFRhcmdldC5zZWxlY3QoKX1cbiAgICAgICAgICBhcmlhLWxhYmVsPVwiUHJvZHVjdCBRdWFudGl0eSBJbnB1dFwiXG4gICAgICAgICAgY3NzPXtxdWFudGl0eUlucHV0Q1NTfVxuICAgICAgICAgIHZhbHVlPXtxdWFudGl0eX1cbiAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlUXVhbnRpdHlDaGFuZ2V9XG4gICAgICAgICAgb25CbHVyPXtoYW5kbGVRdWFudGl0eUNoYW5nZX1cbiAgICAgICAgICBkaXNhYmxlZD17cXVhbnRpdHlTdGVwfVxuICAgICAgICAvPlxuXG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICBjbGFzc05hbWU9XCJ3cHMtcXVhbnRpdHktaW5jcmVtZW50XCJcbiAgICAgICAgICBjc3M9e1tRdWFudGl0eUluY0RlY0NTUywgUXVhbnRpdHlJbmNDU1NdfVxuICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgIHJvbGU9XCJidXR0b25cIlxuICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZUluY3JlbWVudH1cbiAgICAgICAgPlxuICAgICAgICAgIDxRdWFudGl0eUluY0ljb24gLz5cbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBRdWFudGl0eVxuIl19 */"));

  function handleQuantityChange(e) {
    if (isUpdating) {
      return;
    }

    if (e.target.value || e.target.value === 0) {
      if (minQuantity && e.target.value <= minQuantity) {
        var newQuantity = minQuantity;
      } else {
        var newQuantity = e.target.value;
      }

      maybeShowInventoryNotice(e.target.value);
      setQuantity(newQuantity);
    }
  }

  function handleDecrement() {
    if (isUpdating) {
      return;
    }

    dispatch({
      type: "SET_NOTICE",
      payload: false
    });
    maybeShowInventoryNotice(quantity);

    if (quantity === 1 || quantity < minQuantity) {
      dispatch({
        type: "SET_NOTICE",
        payload: {
          type: "warning",
          message: __webpack_provided_wp_dot_i18n.sprintf(__webpack_provided_wp_dot_i18n.__("Sorry, you must purchase a minimum of %d items for this product.", "shopwp"), quantity)
        }
      });
    } else {
      if (!quantityStep) {
        var newQuantity = quantity - 1;
      } else {
        var newQuantity = quantity - quantityStep;
      }

      maybeShowInventoryNotice(newQuantity);
      setQuantity(newQuantity);
    }
  }

  function handleIncrement() {
    if (isUpdating) {
      return;
    }

    dispatch({
      type: "SET_NOTICE",
      payload: false
    });

    if (!quantityStep) {
      var newQuantity = quantity + 1;
    } else {
      var newQuantity = quantity + quantityStep;
    }

    maybeShowInventoryNotice(newQuantity);
    setQuantity(newQuantity);
  }

  function maybeShowInventoryNotice(newQuantity) {
    if (maxQuantity && newQuantity > maxQuantity) {
      // Only show notice for cart line item quantity
      if (setNotice && lineItem) {
        setNotice({
          type: "warning",
          message: __webpack_provided_wp_dot_i18n.sprintf(__webpack_provided_wp_dot_i18n.__("Warning: the quantity you're trying to purchase may be limited to %d at checkout.", "shopwp"), lineItem.merchandise.quantityAvailable)
        });
      }
    } else {
      if (setNotice && lineItem) {
        setNotice(false);
      }
    }
  }

  useEffect(function () {
    if (isFirstRender) {
      return;
    }

    onChange(debouncedQuantity, initialQuantity);
  }, [debouncedQuantity]);
  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)("div", {
    className: "wps-quantity-container",
    css: [Common_css__WEBPACK_IMPORTED_MODULE_1__.containerFluidCSS, quantityContainer, ";label:Quantity;" + ( false ? 0 : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */")]
  }, (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)("div", {
    css: [Common_css__WEBPACK_IMPORTED_MODULE_1__.flexRowCSS, ";label:Quantity;" + ( false ? 0 : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */")]
  }, (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)("button", {
    className: "wps-quantity-decrement",
    css: [QuantityIncDecCSS, QuantityDecCSS, ";label:Quantity;" + ( false ? 0 : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */")],
    type: "button",
    role: "button",
    onClick: handleDecrement
  }, (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)(_common_icons_icon_decrement__WEBPACK_IMPORTED_MODULE_2__["default"], null)), (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)("input", {
    className: "wps-quantity-input",
    type: "number",
    min: minQuantity > 1 ? minQuantity : 1,
    onFocus: function onFocus(e) {
      return e.currentTarget.select();
    },
    "aria-label": "Product Quantity Input",
    css: quantityInputCSS,
    value: quantity,
    onChange: handleQuantityChange,
    onBlur: handleQuantityChange,
    disabled: quantityStep
  }), (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)("button", {
    className: "wps-quantity-increment",
    css: [QuantityIncDecCSS, QuantityIncCSS, ";label:Quantity;" + ( false ? 0 : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */")],
    type: "button",
    role: "button",
    onClick: handleIncrement
  }, (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)(_common_icons_icon_increment__WEBPACK_IMPORTED_MODULE_3__["default"], null))));
}

/* harmony default export */ __webpack_exports__["default"] = (Quantity);

/***/ })

}]);
//# sourceMappingURL=Quantity-public.shopwp-components.js.map