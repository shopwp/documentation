{"version":3,"file":"CartLineItemQuantity-public.shopwp-components.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA,IAAMO,QAAQ,GAAGC,iCAAA,CAAWE,IAAX,CAAgB;AAAA,SAC/B,8LAD+B;AAAA,CAAhB,CAAjB;;AAIA,SAASC,oBAAT,OAAuD;AAAA,MAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACrD,MAAMC,SAAS,GAAGV,0DAAY,EAA9B;AACA,MAAMW,SAAS,GAAGV,+DAAY,EAA9B;AACA,MAAMW,YAAY,GAAGV,kEAAe,EAApC;AACA,MAAMW,YAAY,GAAGd,6DAAe,EAApC;AACA,MAAMe,iBAAiB,GAAGN,QAAQ,CAACO,WAAT,CAAqBD,iBAA/C;AACA,MAAME,WAAW,GAAGN,SAAS,CAACO,QAAV,CAAmBC,oBAAnB,GAChBR,SAAS,CAACO,QAAV,CAAmBC,oBADH,GAEhBJ,iBAAiB,GACjBA,iBADiB,GAEjB,KAJJ;AAMA,MAAMK,WAAW,GAAGT,SAAS,CAACO,QAAV,CAAmBG,oBAAvC;AACA,MAAMC,UAAU,GAAGX,SAAS,CAACO,QAAV,CAAmBK,qBAAtC;;AAEA,WAASC,QAAT,CAAkBC,WAAlB,EAA+B;AAC7B,QAAIhB,QAAQ,CAACiB,QAAT,KAAsBD,WAA1B,EAAuC;AACrC;AACD;;AAED1B,IAAAA,iDAAW,CAACa,SAAD,EAAYE,YAAZ,EAA0BD,YAA1B,EAAwCJ,QAAxC,EAAkDgB,WAAlD,CAAX;AACD;;AAED,SACE,oDAAC,QAAD;AACE,YAAQ,EAAEX,YADZ;AAEE,gBAAY,EAAEQ,UAFhB;AAGE,eAAW,EAAEL,WAHf;AAIE,eAAW,EAAEG,WAJf;AAKE,mBAAe,EAAEX,QAAQ,CAACiB,QAL5B;AAME,YAAQ,EAAEjB,QANZ;AAOE,YAAQ,EAAEe,QAPZ;AAQE,cAAU,EAAEZ,SAAS,CAACe,cARxB;AASE,aAAS,EAAEjB;AATb,IADF;AAaD;;AAED,+DAAeF,oBAAf","sources":["webpack://shopwpComponents/./src/components/cart/lineitem/quantity/index.jsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from \"@emotion/react\"\nimport { updateLines } from \"../../api\"\nimport { useCartDispatch, useCartState } from \"../../_state/hooks\"\nimport { useShopState, useShopDispatch } from \"../../../shop/_state/hooks\"\n\nconst Quantity = wp.element.lazy(() =>\n  import(/* webpackChunkName: 'Quantity-public' */ \"../../../quantity\")\n)\n\nfunction CartLineItemQuantity({ lineItem, setNotice }) {\n  const cartState = useCartState()\n  const shopState = useShopState()\n  const shopDispatch = useShopDispatch()\n  const cartDispatch = useCartDispatch()\n  const quantityAvailable = lineItem.merchandise.quantityAvailable\n  const maxQuantity = cartState.settings.lineitemsMaxQuantity\n    ? cartState.settings.lineitemsMaxQuantity\n    : quantityAvailable\n    ? quantityAvailable\n    : false\n\n  const minQuantity = cartState.settings.lineitemsMinQuantity\n  const customStep = cartState.settings.lineitemsQuantityStep\n\n  function onChange(newQuantity) {\n    if (lineItem.quantity === newQuantity) {\n      return\n    }\n\n    updateLines(shopState, cartDispatch, shopDispatch, lineItem, newQuantity)\n  }\n\n  return (\n    <Quantity\n      dispatch={cartDispatch}\n      quantityStep={customStep}\n      maxQuantity={maxQuantity}\n      minQuantity={minQuantity}\n      initialQuantity={lineItem.quantity}\n      lineItem={lineItem}\n      onChange={onChange}\n      isUpdating={shopState.isCartUpdating}\n      setNotice={setNotice}\n    />\n  )\n}\n\nexport default CartLineItemQuantity\n"],"names":["jsx","css","updateLines","useCartDispatch","useCartState","useShopState","useShopDispatch","Quantity","wp","element","lazy","CartLineItemQuantity","lineItem","setNotice","cartState","shopState","shopDispatch","cartDispatch","quantityAvailable","merchandise","maxQuantity","settings","lineitemsMaxQuantity","minQuantity","lineitemsMinQuantity","customStep","lineitemsQuantityStep","onChange","newQuantity","quantity","isCartUpdating"],"sourceRoot":""}