{"version":3,"file":"4760.shopwp-components.js","mappings":"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","sources":["webpack://shopwpComponents/./src/common/selections/index.jsx","webpack://shopwpComponents/./src/components/storefront/selections/clear.jsx","webpack://shopwpComponents/./src/components/storefront/selections/values.jsx","webpack://shopwpComponents/./src/components/storefront/selections/types.jsx","webpack://shopwpComponents/./src/components/storefront/selections/wrapper.jsx","webpack://shopwpComponents/./src/components/storefront/selections/index.jsx","webpack://shopwpComponents/./node_modules/lodash/difference.js","webpack://shopwpComponents/./node_modules/lodash/union.js"],"sourcesContent":["import union from \"lodash/union\"\nimport without from \"lodash/without\"\nimport difference from \"lodash/difference\"\nimport isEmpty from \"lodash/isEmpty\"\nimport hasIn from \"lodash/hasIn\"\nimport isString from \"lodash/isString\"\nimport { objectIsEmpty } from \"Utils\"\n\nfunction lowercaseCurrentList(currentList) {\n  if (!currentList) {\n    return []\n  }\n\n  return currentList.map((name) => {\n    if (!isString(name)) {\n      return name\n    }\n\n    if (name.includes(\"gid://\")) {\n      return name\n    }\n\n    return String(name).toLowerCase()\n  })\n}\n\nfunction updateSelectionList(params) {\n  if (!params.isSelected) {\n    return without(\n      lowercaseCurrentList(params.currentList),\n      params.selectedValue\n    )\n  }\n\n  return union([params.selectedValue], params.currentList)\n}\n\nfunction isSelectionsOfTypeEmpty(selections, type) {\n  return !selections[type]\n}\n\nfunction findDeselectedValue(localSelectedState, globalSelectionsTypeList) {\n  return difference(localSelectedState, globalSelectionsTypeList)\n}\n\nfunction foundDeselectedValue(removedValue, localValue) {\n  return removedValue[0] === localValue\n}\n\nfunction getSelectionTypes(selections) {\n  var filterTypes = Object.keys(selections)\n\n  if (isEmpty(filterTypes) || objectIsEmpty(selections)) {\n    return []\n  }\n\n  return filterTypes\n}\n\n/*\n\nWhen selections are removed ...\n\n*/\nfunction isCurrentlySelected(selections, valueSelected, type) {\n  var selected = false\n\n  if (isEmpty(selections)) {\n    selected = false\n  } else {\n    if (!hasIn(selections, type)) {\n      selected = false\n    } else if (selections[type].find((value) => valueSelected === value)) {\n      selected = true\n    }\n  }\n\n  return selected\n}\n\nfunction createSelectionsOfType(itemType, typeSelections) {\n  const temp = {}\n\n  temp[itemType] = typeSelections\n\n  return temp\n}\n\nfunction buildNewSelection(\n  itemValue,\n  itemType,\n  isSelected,\n  existingSelections\n) {\n  for (const prop in existingSelections) {\n    if (prop !== itemType) {\n      if (isEmpty(existingSelections[prop])) {\n        delete existingSelections[prop]\n      }\n    }\n  }\n\n  if (itemType === \"collections\") {\n    for (const prop in existingSelections) {\n      if (prop !== \"collections\") {\n        delete existingSelections[prop]\n      }\n    }\n  } else {\n    for (const prop in existingSelections) {\n      if (prop === \"collections\") {\n        delete existingSelections[prop]\n      }\n    }\n  }\n\n  if (!itemValue) {\n    return updateSelectionList({\n      currentList: existingSelections[itemType],\n    })\n  }\n\n  if (isString(itemValue)) {\n    if (itemValue.includes(\"gid://\")) {\n      var newSelectedVal = itemValue\n    } else {\n      var newSelectedVal = String(itemValue).toLowerCase()\n    }\n  } else {\n    var newSelectedVal = itemValue\n  }\n\n  return updateSelectionList({\n    isSelected: isSelected,\n    currentList: existingSelections[itemType],\n    selectedValue: newSelectedVal,\n  })\n}\n\nexport {\n  updateSelectionList,\n  isSelectionsOfTypeEmpty,\n  findDeselectedValue,\n  foundDeselectedValue,\n  isCurrentlySelected,\n  getSelectionTypes,\n  createSelectionsOfType,\n  buildNewSelection,\n}\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/react'\nimport { useItemsState, useItemsDispatch } from '../../items/_state/hooks'\nimport { useStorefrontState, useStorefrontDispatch } from '../_state/hooks'\n\nfunction StorefrontSelectionsClear() {\n\tconst itemsState = useItemsState()\n\tconst itemsDispatch = useItemsDispatch()\n\tconst storefrontDispatch = useStorefrontDispatch()\n\tconst storefrontState = useStorefrontState()\n\n\tfunction clearAllSelections() {\n\t\tstorefrontDispatch({ type: 'CLEAR_SELECTIONS' })\n\t\titemsDispatch({ type: 'SET_QUERY_TYPE', payload: 'products' })\n\n\t\titemsDispatch({\n\t\t\ttype: 'SET_QUERY_PARAMS',\n\t\t\tpayload: itemsState.originalParams,\n\t\t})\n\n\t\titemsDispatch({ type: 'SET_IS_FETCHING_NEW', payload: true })\n\t}\n\n\tconst clearAllCSS = css`\n\t\ttext-decoration: underline;\n\t\tfont-size: 14px;\n\t\tmargin-left: 4px;\n\t\tmargin-top: 0px;\n\t\tposition: relative;\n\t\ttop: -2px;\n\n\t\t&:hover {\n\t\t\topacity: 0.8;\n\t\t\tcursor: pointer;\n\t\t}\n\t`\n\n\treturn (\n\t\t<div\n\t\t\tclassName='wps-filter-selections-clear'\n\t\t\tonClick={clearAllSelections}\n\t\t\tcss={clearAllCSS}>\n\t\t\t{itemsState.settings.clearFilterSelectionsText}\n\t\t</div>\n\t)\n}\n\nexport { StorefrontSelectionsClear }\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/react\"\nimport { IconRemove } from \"Common/icons/icon-remove.jsx\"\nimport { createSelectionsOfType, buildNewSelection } from \"Common/selections\"\nimport { useStorefrontState, useStorefrontDispatch } from \"../_state/hooks\"\nimport isString from \"lodash/isString\"\nimport { useItemsState } from \"../../items/_state/hooks\"\n\nfunction StorefrontSelectionsValue({ selectionType, val }) {\n  const storefrontState = useStorefrontState()\n  const storefrontDispatch = useStorefrontDispatch()\n  const itemsState = useItemsState()\n\n  function onClick(e) {\n    const newList = buildNewSelection(\n      val,\n      selectionType,\n      false,\n      storefrontState.selections\n    )\n\n    var createdSelections = createSelectionsOfType(selectionType, newList)\n\n    storefrontDispatch({\n      type: \"SET_SELECTIONS\",\n      payload: createdSelections,\n    })\n\n    storefrontDispatch({\n      type: \"SET_SELECTED_\" + String(selectionType).toUpperCase(),\n      payload: newList,\n    })\n  }\n\n  const selectionValueCSS = css`\n    margin-right: 8px;\n    margin-bottom: 10px;\n    text-transform: capitalize;\n    padding: 5px 9px 5px 12px;\n    background: transparent;\n    font-size: 14px;\n    position: relative;\n    display: flex;\n    align-items: center;\n    border: 1px solid silver;\n    border-radius: 4px;\n\n    &:hover {\n      cursor: pointer;\n      opacity: 0.8;\n    }\n\n    .wps-icon {\n      width: 7px;\n      height: 7px;\n      display: inline-block;\n      right: 2px;\n      position: relative;\n      top: 0;\n      margin-left: 10px;\n    }\n\n    .wps-icon svg {\n      width: 7px;\n      height: 7px;\n      display: inline-block;\n      position: relative;\n      position: absolute;\n      top: 0;\n    }\n  `\n\n  return (\n    <span\n      className=\"wps-filter-selection-value wps-mr-2\"\n      onClick={onClick}\n      css={selectionValueCSS}\n    >\n      {selectionType === \"available_for_sale\"\n        ? itemsState.settings.selectionsAvailableForSaleText\n        : isString(val)\n        ? val\n        : val.label}\n      <IconRemove />\n    </span>\n  )\n}\n\nfunction StorefrontSelectionsValues({ selectionType, vals }) {\n  return vals.map((item) => {\n    return item ? (\n      <StorefrontSelectionsValue\n        key={isString(item) ? item : item.id}\n        selectionType={selectionType}\n        val={item}\n      />\n    ) : null\n  })\n}\n\nexport { StorefrontSelectionsValues }\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/react\"\nimport { StorefrontSelectionsValues } from \"./values\"\nimport { getSelectionTypes } from \"Common/selections\"\nimport { useStorefrontState } from \"../_state/hooks\"\nimport isEmpty from \"lodash/isEmpty\"\n\nfunction StorefrontSelectionsType({ selectionType }) {\n  const storefrontState = useStorefrontState()\n\n  const filterSelectionTypeCSS = css`\n    margin-bottom: 10px;\n  `\n\n  const filterSelectionGroupCSS = css`\n    display: flex;\n    flex-wrap: wrap;\n  `\n  return !isEmpty(storefrontState.selections[selectionType]) ? (\n    <div className=\"wps-filter-selection-type\" css={filterSelectionTypeCSS}>\n      <div\n        className=\"wps-selections-group align-items-center\"\n        css={filterSelectionGroupCSS}\n      >\n        <StorefrontSelectionsValues\n          selectionType={selectionType}\n          vals={storefrontState.selections[selectionType]}\n        />\n      </div>\n    </div>\n  ) : null\n}\n\nfunction StorefrontSelectionsTypes({ selections }) {\n  const selectionTypes = getSelectionTypes(selections)\n\n  return selectionTypes.map((selectionType, index) => (\n    <StorefrontSelectionsType key={index} selectionType={selectionType} />\n  ))\n}\n\nexport { StorefrontSelectionsTypes }\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/react'\nimport { StorefrontSelectionsClear } from './clear'\nimport { StorefrontSelectionsTypes } from './types'\n\nfunction StorefrontSelectionsWrapper({ selections }) {\n\tconst StorefrontSelectionsWrapperCSS = css`\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\talign-items: baseline;\n\t\tflex-wrap: wrap;\n\t`\n\n\treturn (\n\t\t<div className='wps-filter-selections' css={StorefrontSelectionsWrapperCSS}>\n\t\t\t<StorefrontSelectionsTypes selections={selections} />\n\t\t\t<StorefrontSelectionsClear />\n\t\t</div>\n\t)\n}\n\nexport { StorefrontSelectionsWrapper }\n","import { StorefrontSelectionsWrapper } from \"./wrapper\"\nimport { objectIsEmpty } from \"Utils\"\nimport { usePortal } from \"Hooks\"\nimport { useStorefrontState } from \"../_state/hooks\"\n\nfunction StorefrontSelections({ dropzone }) {\n  const storefrontState = useStorefrontState()\n\n  return usePortal(\n    !objectIsEmpty(storefrontState.selections) ? (\n      <StorefrontSelectionsWrapper selections={storefrontState.selections} />\n    ) : null,\n    document.querySelector(dropzone)\n  )\n}\n\nexport default StorefrontSelections\n","var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nmodule.exports = difference;\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nmodule.exports = union;\n"],"names":["updateSelectionList","params","isSelected","union","selectedValue","currentList","without","map","name","isString","includes","String","toLowerCase","getSelectionTypes","selections","filterTypes","Object","keys","isEmpty","objectIsEmpty","createSelectionsOfType","itemType","typeSelections","temp","buildNewSelection","itemValue","existingSelections","prop","newSelectedVal","StorefrontSelectionsClear","itemsState","useItemsState","itemsDispatch","useItemsDispatch","storefrontDispatch","useStorefrontDispatch","useStorefrontState","clearAllCSS","className","onClick","type","payload","originalParams","css","settings","clearFilterSelectionsText","StorefrontSelectionsValue","selectionType","val","storefrontState","selectionValueCSS","e","newList","createdSelections","toUpperCase","selectionsAvailableForSaleText","label","StorefrontSelectionsValues","vals","item","key","id","StorefrontSelectionsType","filterSelectionTypeCSS","filterSelectionGroupCSS","StorefrontSelectionsTypes","index","StorefrontSelectionsWrapper","StorefrontSelectionsWrapperCSS","dropzone","usePortal","document","querySelector","baseDifference","baseFlatten","baseRest","isArrayLikeObject","difference","array","values","module","exports","baseUniq","arrays"],"sourceRoot":""}