{"version":3,"file":"4649.shopwp-components.js","mappings":"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","sources":["webpack://shopwpComponents/./src/components/collections/collection/_state/hooks.js","webpack://shopwpComponents/./src/components/collections/collection/products/sorting.jsx","webpack://shopwpComponents/./src/components/collections/collection/products/index.jsx","webpack://shopwpComponents/./src/components/collections/collection/products/api.jsx"],"sourcesContent":["import { CollectionStateContext, CollectionDispatchContext } from \"./context\"\n\nfunction useCollectionState() {\n  const context = wp.element.useContext(CollectionStateContext)\n\n  if (!context) {\n    throw new Error(\n      \"useCollectionState must be used within the CollectionProvider\"\n    )\n  }\n\n  return context\n}\n\nfunction useCollectionDispatch() {\n  const context = wp.element.useContext(CollectionDispatchContext)\n\n  if (!context) {\n    throw new Error(\n      \"useCollectionDispatch must be used within the CollectionProvider\"\n    )\n  }\n\n  return context\n}\n\nexport { useCollectionState, useCollectionDispatch }\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/react\"\nimport Selects from \"../../../storefront/selects\"\nimport { findDefaultSelectVal, updateQueryParamsWithSort } from \"Utils\"\nimport Loader from \"../../../loader\"\nimport { useCollectionState, useCollectionDispatch } from \"../_state/hooks\"\n\nfunction CollectionSorting({ settings }) {\n  const collectionDispatch = useCollectionDispatch()\n  const collectionState = useCollectionState()\n\n  const CollectionsSortingWrapperCSS = css`\n    width: 100%;\n    display: flex;\n    align-items: flex-end;\n    justify-content: flex-end;\n    margin-bottom: 20px;\n    align-items: baseline;\n\n    #swp-collections-sorting *:hover {\n      cursor: pointer;\n    }\n  `\n\n  const options = [\n    {\n      label: \"Title (A-Z)\",\n      value: \"TITLE\",\n    },\n    {\n      label: \"Title (Z-A)\",\n      value: \"TITLE-REVERSE\",\n    },\n    {\n      label: \"Price (Low to high)\",\n      value: \"PRICE\",\n    },\n    {\n      label: \"Price (high to low)\",\n      value: \"PRICE-REVERSE\",\n    },\n    {\n      label: \"Best Selling\",\n      value: \"BEST_SELLING\",\n    },\n    {\n      label: \"Recently Added\",\n      value: \"CREATED\",\n    },\n    {\n      label: \"Collection default\",\n      value: \"COLLECTION_DEFAULT\",\n    },\n    {\n      label: \"Manual\",\n      value: \"MANUAL\",\n    },\n  ]\n\n  function customOnChange(data) {\n    const params = updateQueryParamsWithSort(data.value)\n\n    const finalNewParams = {\n      ...collectionState.productQueryParams,\n      ...params,\n    }\n\n    collectionDispatch({\n      type: \"SET_PRODUCT_QUERY_PARAMS\",\n      payload: finalNewParams,\n    })\n\n    collectionDispatch({\n      type: \"SET_IS_FETCHING_NEW\",\n      payload: true,\n    })\n  }\n\n  return (\n    <div css={CollectionsSortingWrapperCSS}>\n      {collectionState.isLoading && <Loader color=\"#000\" />}\n      <Selects\n        labelText={wp.i18n.__(\"Sort by:\", \"shopwp\")}\n        selectId=\"swp-collections-sorting\"\n        options={options}\n        customOnChange={customOnChange}\n        defaultValue={findDefaultSelectVal(\n          options,\n          settings.sortBy,\n          settings.reverse\n        )}\n        isLoading={collectionState.isLoading}\n      />\n    </div>\n  )\n}\n\nexport default CollectionSorting\n","import Products from \"../../../products\"\nimport CollectionSorting from \"./sorting\"\nimport { usePortal } from \"Hooks\"\nimport { useItemsState } from \"../../../items/_state/hooks\"\nimport { useCollectionState, useCollectionDispatch } from \"../_state/hooks\"\nimport { useShopState } from \"../../../shop/_state/hooks\"\nimport { useGetCollectionProductsQuery } from \"./api\"\n\nfunction CollectionProducts() {\n  const collectionState = useCollectionState()\n  const collectionDispatch = useCollectionDispatch()\n  const itemsState = useItemsState()\n  const shopState = useShopState()\n\n  useGetCollectionProductsQuery(collectionState, collectionDispatch, shopState)\n\n  return (\n    <>\n      <Products\n        settings={collectionState.productOptions.settings}\n        element={collectionState.productOptions.element}\n        queryType={collectionState.productOptions.queryType}\n        id={collectionState.productOptions.id}\n        isLoading={collectionState.isLoading}\n        payload={collectionState.products}\n        queryParams={collectionState.productQueryParams}\n        initialFetch={false}\n      />\n\n      {itemsState.settings.sorting\n        ? usePortal(\n            <CollectionSorting settings={itemsState.settings} />,\n            collectionState.productOptions.sortingElement\n          )\n        : null}\n    </>\n  )\n}\n\nexport default CollectionProducts\n","import {\n  fetchProductsByCollections,\n  queryOptionsNoRefetch,\n  maybeHandleApiError,\n} from \"Api\"\n\nimport { useQuery } from \"react-query\"\nimport isEmpty from \"lodash/isEmpty\"\nimport has from \"lodash/has\"\n\nfunction useGetCollectionProductsQuery(state, dispatch, shopState) {\n  return useQuery(\n    [\"fetchProductsByCollections\", state.productQueryParams],\n    () => {\n      dispatch({ type: \"SET_IS_LOADING\", payload: true })\n      return fetchProductsByCollections(state.productQueryParams, shopState)\n    },\n    {\n      enabled: state.isFetchingNew,\n      retry: false,\n      onError: (error) => {\n        dispatch({ type: \"SET_IS_LOADING\", payload: false })\n        dispatch({\n          type: \"SET_IS_FETCHING_NEW\",\n          payload: false,\n        })\n\n        console.error(\"ShopWP Error\", error)\n      },\n      onSuccess: (newItems) => {\n        var error = maybeHandleApiError(false, newItems, dispatch)\n\n        if (error) {\n          dispatch({\n            type: \"SET_PRODUCTS\",\n            payload: [],\n          })\n          return\n        }\n\n        if (\n          !newItems ||\n          isEmpty(newItems) ||\n          (has(newItems, \"edges\") &&\n            (!newItems.edges || !newItems.edges.length))\n        ) {\n          dispatch({\n            type: \"SET_PRODUCTS\",\n            payload: [],\n          })\n        } else {\n          dispatch({\n            type: \"SET_PRODUCTS\",\n            payload: newItems.edges,\n          })\n        }\n\n        dispatch({ type: \"SET_IS_LOADING\", payload: false })\n\n        dispatch({\n          type: \"SET_IS_FETCHING_NEW\",\n          payload: false,\n        })\n      },\n      ...queryOptionsNoRefetch,\n    }\n  )\n}\n\nexport { useGetCollectionProductsQuery }\n"],"names":["useCollectionState","context","wp","useContext","CollectionStateContext","Error","useCollectionDispatch","CollectionDispatchContext","settings","collectionDispatch","collectionState","CollectionsSortingWrapperCSS","options","label","value","css","isLoading","color","labelText","__","selectId","customOnChange","data","params","updateQueryParamsWithSort","finalNewParams","productQueryParams","type","payload","defaultValue","findDefaultSelectVal","sortBy","reverse","state","dispatch","shopState","itemsState","useItemsState","useShopState","useQuery","fetchProductsByCollections","enabled","isFetchingNew","retry","onError","error","console","onSuccess","newItems","maybeHandleApiError","isEmpty","has","edges","length","queryOptionsNoRefetch","productOptions","element","queryType","id","products","queryParams","initialFetch","sorting","usePortal","sortingElement"],"sourceRoot":""}